# -*- coding: utf-8 -*-
"""NLTK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12-cfVArBfN2bzV6pjofrxnD3qG-bhADk
"""

pip install nltk

pip install WordCloud

import pandas as pd
import numpy as np
import seaborn as sns 
import matplotlib.pyplot as plt
import nltk
from nltk.tokenize import word_tokenize

"""Data is in the form of [[MM
, text]]
"""

def dataDictionary(data):
  dic = {'01' : [],'02' : [],'03' : [],'04' : [],'05' : [],'06' : [], '07' : [],
         '08' : [],'09' : [],'10' : [],'11' : [],'12' : []}
  for i in data: 
    dic[data[i][1]].append(data[i][2])
  
  
  return {i : word_tokenize(dic[i]) for i in dic.keys}

def retrieveMonths(args, dic)-> list:
  words = list()
  for i in args: 
    words.append(dic[i])
  return words

"""Once we have an array containing all words from our months of interest, we filter and create our bag of words."""

from string import punctuation
from nltk.corpus import stopwords
nltk.download('stopwords')

def nltkfilter(words):
  engStopWords = stopwords.words('english')
  fwords = [word for word in words if word not in punctuation and
           word not in engStopWords and len(word) >= 3]
  return fwords

from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
from PIL import Image

def get_words(file_path) -> list:
    f = open(file_path, errors='ignore')
    content = f.read()
    content_list = content.split()
    for i in range(len(content_list)):
        content_list[i] = content_list[i].lower()
    f.close()
    return content_list

def createWordCloud(words, numWords):

  filtered_words = nltkfilter(words)

  plt.figure(figsize=(50,50))
  wc = WordCloud(max_font_size= 45, max_words = numWords, background_color ="white")
  wordcloud_jan = wc.generate_from_text(" ".join(filtered_words))
  plt.imshow(wordcloud_jan, interpolation='bilinear')
  plt.axis('off')
  plt.show()

createWordCloud(get_words("sample_data/Sample-text-file-MB.txt"), 100)

def plotFrequency(words, numWords, myTitle):
  filtered_words = nltkfilter(words)
  plt.figure(figsize=(10,5))
  freq_dist = nltk.FreqDist(filtered_words)
  freq_dist.plot(numWords, cumulative = False, title = myTitle)

plotFrequency(get_words("sample_data/Sample-text-file-MB.txt"), 50, "January")